/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.timeline;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.sleuthkit.autopsy.coreutils.Logger;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//org.sleuthkit.autopsy.timeline//Timeline//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "TimelineTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "timeline", openAtStartup = false)
@ActionID(category = "Window", id = "org.sleuthkit.autopsy.timeline.TimelineTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_TimelineAction",
preferredID = "TimelineTopComponent")
@Messages({
    "CTL_TimelineAction=Timeline",
    "CTL_TimelineTopComponent=Timeline Window",
    "HINT_TimelineTopComponent=This is a Timeline window"
})
public final class TimelineTopComponent extends TopComponent {
    
    private static final Logger logger = Logger.getLogger(TimelineTopComponent.class.getName());

    public TimelineTopComponent() {
        initComponents();
        setName(Bundle.CTL_TimelineTopComponent());
        setToolTipText(Bundle.HINT_TimelineTopComponent());
        
        // set up connections between panels
        timelineJPanel.setDataResultPanel(dataResultPanel);
        dataResultPanel.setContentViewer(dataContentPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataContentPanel = new org.sleuthkit.autopsy.corecomponents.DataContentPanel();
        dataResultPanel = new org.sleuthkit.autopsy.corecomponents.DataResultPanel();
        timelineJPanel = new org.sleuthkit.autopsy.timeline.TimelineJPanel();

        timelineJPanel.setBackground(new java.awt.Color(0, 204, 204));

        javax.swing.GroupLayout timelineJPanelLayout = new javax.swing.GroupLayout(timelineJPanel);
        timelineJPanel.setLayout(timelineJPanelLayout);
        timelineJPanelLayout.setHorizontalGroup(
            timelineJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        timelineJPanelLayout.setVerticalGroup(
            timelineJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 202, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(dataResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
            .addComponent(timelineJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(timelineJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataContentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.sleuthkit.autopsy.corecomponents.DataContentPanel dataContentPanel;
    private org.sleuthkit.autopsy.corecomponents.DataResultPanel dataResultPanel;
    private org.sleuthkit.autopsy.timeline.TimelineJPanel timelineJPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        timelineJPanel.initialize();
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
